#!/dev/null




:: test / protocol-v1 / server :: exec -- "${ZRUN[@]}" ':: test' protocol_v1_server "${@}"
:: test / protocol-v1 / client :: exec -- "${ZRUN[@]}" ':: test' protocol_v1_client "${@}"

:: test / transport / server :: exec -- "${ZRUN[@]}" ':: test' transport_server "${@}"
:: test / transport / client :: exec -- "${ZRUN[@]}" ':: test' transport_client "${@}"

:: test / packets / server :: exec -- "${ZRUN[@]}" ':: test' packets_server "${@}"
:: test / packets / client :: exec -- "${ZRUN[@]}" ':: test' packets_client "${@}"

<< test
	exec -- "${ZRUN[@]}" ':: python' ./sources/tests.py "${@}"
!!




<< python
	exec ./.temporary/python/bin/python \
			-s -E -R -O -B \
			"${@}" \
	#
!!




<< initialize / requirements
	test "${#}" -eq 0
	
	./.temporary/python/bin/pip install --compile --requirement ./sources/requirements.txt
!!


<< initialize / virtualenv
	test "${#}" -eq 0
	
	if test -e ./.temporary/python/.initialized ; then
		exit -- 0
	fi
	
	virtualenv-2.7 \
			--python python2.7 \
			--clear \
			--no-site-packages \
			--no-setuptools \
			--no-wheel \
			--no-download \
			--unzip-setuptools \
			-- \
			./.temporary/python \
		#
	
	./.temporary/python/bin/pip install --upgrade --compile -- pip
	./.temporary/python/bin/pip install --upgrade --compile -- wheel
	./.temporary/python/bin/pip install --upgrade --compile -- setuptools
	
	touch -- ./.temporary/python/.initialized
!!


<< initialize / temporary
	test "${#}" -eq 0
	
	if test -e ./.temporary ; then
		exit -- 0
	fi
	
	_token="${RANDOM}-${RANDOM}-${RANDOM}-${RANDOM}"
	_target="${TMPDIR:-/tmp}/gemini-experiments--${_token}"
	mkdir -- "${_target}"
	ln -s -T -- "${_target}" ./.temporary
!!




:: plantuml / watch / protocol-v1 / png :: exec -- "${ZRUN[@]}" ':: plantuml / watch' ./documentation/diagrams/protocol-v1.plantuml png
:: plantuml / watch / protocol-v1 / all :: exec -- "${ZRUN[@]}" ':: plantuml / build' ./documentation/diagrams/protocol-v1.plantuml


--<< plantuml / watch
	test "${#}" -ge 1
	_source="${1}"
	shift -- 1
	exec -- watchexec --watch "${_source}" --no-shell -- "${ZRUN[@]}" ':: plantuml / exec' "${_source}" "${@}"
!!

--<< plantuml / build
	test "${#}" -ge 1
	_source="${1}"
	shift -- 1
	for _type in png svg ; do
		"${ZRUN[@]}" ':: plantuml / exec' "${_source}" "${_type}" "${@}"
	done
!!

--<< plantuml / exec
	test "${#}" -eq 2
	_source="${1}"
	_type="${2}"
	shift -- 2
	_target="$( exec -- dirname -- "${_source}" )/$( exec -- basename -- "${_source}" .plantuml ).${_type}"
	java -jar /usr/share/java/plantuml.jar -pipe -t"${_type}" \
		< "${_source}" \
		>| "${_target}.tmp" \
	#
	mv -T -- "${_target}.tmp" "${_target}"
!!

